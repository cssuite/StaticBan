
/* Plugin generated by AMXX-Studio */
/*							*/
/*		FX:BanSystem #3.0 presents by ReVKa	*/
/*							*/

/*		Very big Thanks to NORTONNNN */

#include <amxmodx>
#include <amxmisc>
#include <ColorChat>

#define PLUGIN "StaticBan"
#define VERSION "# 4.23"
#define AUTHOR "ReVKa"

#define MAX_BANS 64
#define ADMIN_LEVEL ADMIN_BAN

//Bans Variable
new fx_index[MAX_BANS];
new fx_steamid[MAX_BANS][35];
new fx_ip[MAX_BANS][35];
new fx_unbantime[MAX_BANS][32];
new fx_name[MAX_BANS][32];
//
new g_total_bans;
new g_ban_file[64];
//Menu
new g_szLogsDir[64];
//Cvar
new g_MsgType,g_UnbanURL,g_DelayBan,g_DelayKick,g_SteamBan,g_IpBan,g_ConfigBan,g_NickBan,g_InfoPlayer,g_Logs,g_RateUid,g_Debug,g_SubnetBan;
//g_UnbanMenu
new param_id[33],param_player[33],param_time[33][64],param_reason[33][64];
new ipc[33][25],authidc[33][25],namec[33][25]

new g_max_players

new A[6][] = 
{
	"cl_lw", "cl_lc", "model", "cl_updaterate", "cl_dlmax", "_cl_autowepswitch"
}

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	g_DelayKick = register_cvar("amx_static_kickdelay", "4.0")
	g_DelayBan = register_cvar("amx_static_bansdelay", "5.0")
	g_UnbanURL = register_cvar("amx_static_website", "")	// Unban request site (Def.: "www.yoursite.com")
	g_MsgType = register_cvar("amx_static_msg_type", "3")	
	g_SteamBan = register_cvar("amx_staticban_steam", "1")	
	g_IpBan = register_cvar("amx_staticban_ip", "1")	
	g_NickBan = register_cvar("amx_staticban_nick", "1")	
	g_ConfigBan = register_cvar("amx_staticban_uid", "1")	
	g_SubnetBan = register_cvar("staticban_subnet", "0")	
	g_InfoPlayer = register_cvar("amx_staticban_info", "1")
	g_Logs = register_cvar("amx_staticban_logs", "1")
	g_Debug = register_cvar("amx_staticban_logs_debug", "1")
	//g_UnbanMenu = register_cvar("amx_staticban_unbanmenu", "1")
	g_RateUid = register_cvar("amx_staticban_rate", "0")
	
	//register_concmd("amx_ban", 		"cmdBan", 	ADMIN_BAN, 	"<время в минутах> <ник или #юзерайди> [причина]")
	register_concmd("amx_unban", "CmdUnban", ADMIN_IMMUNITY, "<Steam Id or IP>")
	
	register_concmd("stc_ban", 		"cmdBan",	 ADMIN_BAN,	"<время в минутах> <ник или #юзерайди> [причина]")
	register_concmd("stc_unban", 		"CmdUnban", 	ADMIN_BAN, 	"<Steam Id or IP or Name>")
	
	register_concmd("amx_queryban", 	"cmdFindBan"	, ADMIN_BAN, 	"<STEAM ID or IP>")
	register_concmd("amx_reloadbans", 	"cmdReloadBan"	, ADMIN_BAN, 	"<Reloads the Bans without Restarting the Server>")
	register_concmd("amx_resetbans", 	"cmdResetBan"	, ADMIN_BAN, 	"<Resets Bans - Clears Banlist>")
	register_concmd("amx_unsubban", 	"cmdUnSubBan"	, ADMIN_BAN, 	"<Ip> (Remove IP from Banlist)")
	
	get_configsdir(g_ban_file,charsmax(g_ban_file))
	add(g_ban_file, charsmax(g_ban_file), "/BanList.cfg");
	
	LoadBans();
	
	get_localinfo("amxx_logs",g_szLogsDir,charsmax(g_szLogsDir))
	add(g_szLogsDir, charsmax(g_szLogsDir), "/StaticBan_Logs");
	if(!dir_exists(g_szLogsDir)) mkdir(g_szLogsDir);
	
	new configsDir[64]
	get_configsdir(configsDir, 63)
	
	if(get_pcvar_num(g_Debug) > 3 )
		Logging("[BAN System] Старт загрузки конфига [%s локация]",configsDir)
	server_cmd("exec %s/StaticBan.cfg", configsDir)
	
	g_max_players = get_maxplayers() +1
	
	set_task(25.0, "CheckBans", 14962, _, _, "b");	
}

public client_authorized(client)
{		
	get_user_authid(client, authidc[client], 24);
	get_user_ip(client, ipc[client], 24, 1);
	get_user_name(client,namec[client],24)
	
	set_task(random_float(0.4,1.2),"CheckClientConnect",client +144)
	
	if(get_pcvar_num(g_InfoPlayer))
	{
		for(new i = 0; i < g_max_players; i++)
		{
			if(get_user_flags(i) & ADMIN_BAN && !(get_user_flags(client) & ADMIN_IMMUNITY) && is_user_connected(i))
			ColorChat(i,GREY,"^4*:^1 %s ^1зашел, ^4Ip^1 <^3%s^1> ^4Steam^1 <^3%s^1>",namec[client],ipc[client],authidc[client])
			
		}
	}
	if(get_pcvar_num(g_Debug) > 2 )
	Logging("[BAN System][CONNECT] Игрок '%s'[IP '%s'|STEAM '%s'] присоединился к серверу", namec[client],ipc[client],authidc[client])	
}

public client_disconnect(id) 
{
	if(task_exists(id+1125))
	{
		remove_task(id+1125)
	}
	if(task_exists(id))
	{
		remove_task(id)
	}
	if(task_exists(id+144))
	{
		remove_task(id+144)
	}
	
}
public CheckClientConnect(client)
{
	client = client - 144
	
	new banid = -1
	new banrate = -1
	
	/*		Client Config Command		*/
	new str[18]
	get_user_info(client,"bottomcolor",str,17)
	new str2[18]
	get_user_info(client,"rate",str2,17)
	if(containi(str,"/") !=-1 && get_pcvar_num(g_ConfigBan))
	{
		replace_all(str,31,"/"," ")
		new bottom[16]
		new indexx[16]	
		parse(str,bottom,15,indexx,15)
		banid = str_to_num(indexx);
					
	}
	if(containi(str2,"/") !=-1 && get_pcvar_num(g_RateUid))
	{
		replace_all(str2,31,"/"," ")
		new bottom1[22]
		new indexx1[10]
					
		parse(str2,bottom1,21,indexx1,9)
		banrate = str_to_num(indexx1);
	}
	
	static banned_authid[35], banned_ip[35], banned_name[32]
	
	new bool: Banned = false
	new iz;
	
	new strs[5]
	get_user_info(client,"topcolor",strs,4)
	new topcolor = str_to_num(strs) +147
	
	for( new i = 0; i < g_total_bans; i++ )
	{
		copy(banned_authid, sizeof(banned_authid) - 1, fx_steamid[i]);
		copy(banned_ip, sizeof(banned_ip) - 1, fx_ip[i]);
		copy(banned_name, sizeof(banned_name) - 1, fx_name[i]);
		iz  = i
		
		if(fx_index[i] == 0 && (equal(ipc[client], banned_ip) || equal(namec[client], banned_name) || equal(authidc[client], banned_authid)))
		{
			UnbanPlayer(client,i)
			break;
		}
		
		if((get_pcvar_num(g_IpBan) && equal(ipc[client], banned_ip)) || (equal(namec[client], banned_name) &&  get_pcvar_num(g_NickBan))  || (equal(authidc[client], banned_authid) &&  get_pcvar_num(g_SteamBan)))
		{
			Banned = true
			
			if(get_pcvar_num(g_Debug) > 3 )
				Logging("[BAN System][BANLIST]Игрок '%s' в банлисте по [IP '%s'|STEAM '%s']", banned_name,banned_ip,banned_authid)
			break;
		}
		
		if(fx_index[i] != 0 && (banid == fx_index[i] || banrate == fx_index[i] || topcolor == fx_index[i]))
		{
			if(!Banned)
			{
				if(get_pcvar_num(g_Debug) > 3 )
					Logging("[BAN System]Игрок '%s' в банлисте по [Rate ID <%i> UID - <%i>]",banrate,banid )
				Banned = true
				
			}
			break;
		}
	}

	
	if(Banned)
	{
		static website[64]
		get_pcvar_string(g_UnbanURL, website, sizeof(website) - 1);
		
		client_cmd(client,"echo ^"********************************^"")
		client_cmd(client,"echo ^"[StaticBan] Информация о Бане^"")
		client_cmd(client,"echo ^"[StaticBan] Твое текущее имя : %s^"",namec[client])
		client_cmd(client,"echo ^"[StaticBan] Твой текущий стим : %s^"",authidc[client])
		client_cmd(client,"echo ^"[StaticBan] Время разбана : %s^"",fx_unbantime[iz])
		client_cmd(client,"echo ^"[StaticBan] Посетите наш сайт для разбана^"")
		if( website[0] )
		{
			client_cmd(client, "echo ^"[StaticBan] %s^"", website);
		}
		client_cmd(client,"echo ^"********************************^"")
		ColorChat(0,RED,"^1[^4StaticBan^1] ^3Игрок^1 '%s', ^3был кикнут, так как его ^4RateID/UID/ID^1 в банлисте",namec[client])
		
		if(get_pcvar_num(g_Debug) > 0 )
		Logging("[BAN System][BANLIST] Игрок '%s' [IP '%s'|STEAM '%s'] в банлисте с UID <%i> и Rate ID - <%i>", namec[client],ipc[client],authidc[client],banid,banrate)

		set_task(get_pcvar_float(g_DelayKick), "Disconnected", client );
	}
	
}	
public TaskStaticBans(id)
	FormatFileBan(param_id[id],param_player[id], param_time[id],param_reason[id])
	
public Disconnected(id)
		server_cmd("kick #%d ^"Вы были забанены...Смотрите консоль^"", get_user_userid(id))

public cmdUnSubBan(id, level, cid)
{
	if(!cmd_access(id, level, cid, 2))
		return PLUGIN_HANDLED
	new ip[25]
	read_argv(1,ip,24)
	
	replace_all(ip,24,"."," ")
	new okteta1[4],okteta2[4],okteta3[4],okteta4[4]
	parse(ip,okteta1,charsmax(okteta1),okteta2,charsmax(okteta2),okteta3,charsmax(okteta3),okteta4,charsmax(okteta4))
	new  n1[23], n2[23], n3[23]
	format(n1, 22, "%s.%s.%s.0", okteta1, okteta2,okteta3)	
	format(n2, 22, "%s.%s.0.0", okteta1, okteta2)	
	format(n3, 22, "%s.0.0.0", okteta1)
	
	server_cmd("removeip ^"%s^"",ip)
	server_cmd("removeip ^"%s^"",n1)
	server_cmd("removeip ^"%s^"",n2)
	server_cmd("removeip ^"%s^"",n3)
	
	if(get_pcvar_num(g_Debug) > 0 )
	Logging("[BAN System][SUBNET] IP '%s' got removed from ip list", ip)	

	server_print("[BAN System][SUBNET] IP '%s' got removed from ip list", ip)
	return PLUGIN_HANDLED
}
		
public cmdFindBan(id, level, cid)
{
	if(!cmd_access(id, level, cid, 2))
		return PLUGIN_HANDLED	
	new uid[35]
	read_argv(1,uid,34)
	
	new bool:is_ip = bool:(containi(uid, ".") != -1);
	new bool:Search = false
	console_print(id,"^n============================^n[StaticBan Ban Info] Search ban for <%s>",uid)
	
	for( new i = 0; i < g_total_bans; i++ )
	{
		if( (!is_ip && equali(uid, fx_steamid[i], 1)) || equali(uid, fx_ip[i], 1))
		{
			Search = true
			if(id)
			{
				console_print(id,"[StaticBan Ban Info] Index(UID) <%d>",fx_index[i])	
				console_print(id,"[StaticBan Ban Info] Name <%s>",fx_name[i])	
				console_print(id,"[StaticBan Ban Info] Ip <%s>",fx_ip[i])	
				console_print(id,"[StaticBan Ban Info] STEAM ID <%s>",fx_steamid[i])	
				console_print(id,"[StaticBan Ban Info] Unban Time <%s>",fx_unbantime[i])	
			}
			
		}
	}
	if(!Search)
	console_print(id,"[StaticBan Ban Info] Ban Not Found!")
	
	console_print(id,"============================^n")
	return PLUGIN_HANDLED
}
public cmdReloadBan(id, level, cid)
{
	if(!cmd_access(id, level, cid, 1))
		return PLUGIN_HANDLED	
	
	g_total_bans = 0
	LoadBans()

	if(get_pcvar_num(g_Debug) > 0 )
	Logging("[BAN System][BANLIST] All Bans Reloaded")
	
	return PLUGIN_HANDLED
}
public cmdResetBan(id, level, cid)
{
	if(!cmd_access(id, level, cid, 1))
		return PLUGIN_HANDLED	
	
	if(get_pcvar_num(g_Debug) > 0 )
	Logging("[BAN System][BANLIST]< - - - - - ALL BANS RESET - - - - - > with %d Total Bans",g_total_bans)
	
	g_total_bans = 0
	if(file_exists(g_ban_file))
	delete_file(g_ban_file)
	
	
	return PLUGIN_HANDLED
}
public cmdBan(id, level, cid)
{
	if(!cmd_access(id, level, cid, 3))
		return PLUGIN_HANDLED	

	new target[32], minutes[16], reason[256]

	read_argv(1, minutes, 15)
	read_argv(2, target, 31) 
	read_argv(3, reason, 255)
	
	new player = cmd_target(id, target,9)
	
	if (!player || get_user_flags(player) & ADMIN_IMMUNITY)
		return PLUGIN_HANDLED
	
	param_id[id] = id;
	param_player[id]= player
	copy(param_time[id],63,minutes)
	copy(param_reason[id],63,reason)
	
	set_task(Float:get_pcvar_float(g_DelayBan), "TaskStaticBans", id);
		
	return PLUGIN_HANDLED
}
public CmdUnban(client, level, cid)
{
	if( !cmd_access(client, level, cid, 2) ) return PLUGIN_HANDLED;
	
	if(!g_total_bans)
	return PLUGIN_HANDLED;
	
	static arg[35];
	read_argv(1, arg, sizeof(arg) - 1);
	
	static banned_authid[35],banned_ip[35],banned_name[33];
	if(!g_total_bans)
	return PLUGIN_HANDLED;
	for( new i = 0; i < g_total_bans; i++ )
	{
		copy(banned_authid, sizeof(banned_authid) - 1, fx_steamid[i]);
		copy(banned_ip, sizeof(banned_ip) - 1, fx_ip[i]);
		copy(banned_name, sizeof(banned_name) - 1, fx_name[i]);
		
		if( equal(arg, banned_authid) || equal(arg, banned_ip) || equal(arg, banned_name))
		{
			static admin_name[64];
			get_user_name(client, admin_name, sizeof(admin_name) - 1);
			ColorChat(0,BLUE,"^1[^4StaticBan^1] Игрок ^4ID/Name^1 [^3%s^1/^3%s^1] был разбанен ^4Админом^3 '%s'", banned_authid,banned_name,admin_name)
			fx_index[i] = 0
			new index = get_user_index(fx_name[i])
			if(is_user_connected(index))
				UnbanPlayer(index,i)
			
			static authid[35]
			get_user_authid(client,authid,34)
			
			static ip[35]
			get_user_ip(client,ip,34)
			
			if(get_pcvar_num(g_Debug) > 0 )
			Logging("[BAN System][UNBAN_BY_ADMIN] Админ '%s'[IP '%s'|STEAM '%s'] РАЗБАНИЛ Игрока '%s'[IP '%s'|STEAM '%s']", admin_name,ip,authid,banned_name,banned_ip,banned_authid)		
			
			client_cmd(client,"snapshot")
			return PLUGIN_HANDLED;
		}
	}
	
	return PLUGIN_HANDLED;
}
AddBan(const index, const target_steamid[], const ip[], const unban_time[], const name[])
{
	new f = fopen(g_ban_file, "a+");
	
	fprintf(f, "%i ^"%s^" ^"%s^" ^"%s^" ^"%s^"^n",\
		index,\
		target_steamid,\
		ip,\
		unban_time,\
		name
		);
	
	fclose(f);
	
	fx_index[g_total_bans] = index;
	copy(fx_steamid[g_total_bans], sizeof(fx_steamid[]) - 1, target_steamid);
	copy(fx_ip[g_total_bans], sizeof(fx_ip[]) - 1, ip);
	copy(fx_unbantime[g_total_bans], sizeof(fx_unbantime[]) - 1, unban_time);
	copy(fx_name[g_total_bans], sizeof(fx_name[]) - 1, name);
	
	server_print("[BAN SYSTEM] Add a Ban to player with IP [%s] Steam [%s] Name [%s] with %i TotalBans",fx_ip[g_total_bans],fx_steamid[g_total_bans],fx_name[g_total_bans],g_total_bans)
	
	g_total_bans++;
	return 1
}
UnbanPlayer(client,i)
{
	new str[32]
	get_user_info(client,"bottomcolor",str,31)
	new str2[32]
	get_user_info(client,"rate",str,31)
	
	if(containi(str,"/") !=-1)
	{
		replace_all(str,31,"/"," ")
		new bottom[16]
		
		parse(str,bottom,15)
		client_cmd(client,"bottomcolor ^"%s^"",bottom)	
	}
	if(containi(str2,"/") !=-1)
	{
		replace_all(str2,31,"/"," ")
		new bottom1[16]
		
		parse(str,bottom1,15)
		client_cmd(client,"rate ^"%s^"",bottom1)	
	}
	
	RemoveBan(i)
	
}
RemoveBan(remove)
{
	for( new i = remove; i < g_total_bans; i++ )
	{
		if( (i + 1) == g_total_bans )
		{
			fx_index[i] = 0;
			copy(fx_steamid[i], sizeof(fx_steamid[]) - 1, "");
			copy(fx_ip[i], sizeof(fx_ip[]) - 1, "");
			copy(fx_unbantime[i], sizeof(fx_unbantime[]) - 1, "");
			copy(fx_name[i], sizeof(fx_name[]) - 1, "");
		}
		else
		{
			fx_index[i] = fx_index[i+1];
			copy(fx_steamid[i], sizeof(fx_steamid[]) - 1, fx_steamid[i+1]);
			copy(fx_ip[i], sizeof(fx_ip[]) - 1, fx_ip[i+1]);
			copy(fx_unbantime[i], sizeof(fx_unbantime[]) - 1, fx_unbantime[i+1]);
			copy(fx_name[i], sizeof(fx_name[]) - 1, fx_name[i+1]);
		}
	}
	
	g_total_bans--;
	
	new f = fopen(g_ban_file, "wt");
	
	static ip[35], steamid[35], index, unbantime[32],name[32];
	for( new i = 0; i < g_total_bans; i++ )
	{
		copy(steamid, sizeof(steamid) - 1, fx_steamid[i]);
		copy(ip, sizeof(ip) - 1, fx_ip[i]);
		index = fx_index[i];
		copy(unbantime, sizeof(unbantime) - 1, fx_unbantime[i]);
		copy(name,charsmax(name),fx_name[i])
		
		fprintf(f, " %i ^"%s^" ^"%s^" ^"%s^" ^"%s^"^n",\
			index,\
			steamid,\
			ip,\
			unbantime,\
			name
			);
	}
	
	fclose(f);
}
LoadBans()
{
	if( file_exists(g_ban_file) )
	{
		new f = fopen(g_ban_file, "rt");
		
		static filedata[160];
		
		while( !feof(f) && g_total_bans < MAX_BANS )
		{
			fgets(f, filedata, sizeof(filedata) - 1);
			
			if( !filedata[0] ) continue;
			
			static steamid[35], index[10], unbantime[32], ip[35],name[32];
			
			parse(filedata,\
				index, charsmax(index),\
				steamid, charsmax(steamid),\
				ip, charsmax(ip),\
				unbantime, charsmax(unbantime),\
				name, charsmax(name)
				);
			
			copy(fx_ip[g_total_bans], charsmax(fx_ip[]), ip);
			copy(fx_steamid[g_total_bans], charsmax(fx_steamid[]), steamid);
			fx_index[g_total_bans] = str_to_num(index);
			copy(fx_unbantime[g_total_bans], charsmax(fx_unbantime[]), unbantime);
			copy(fx_name[g_total_bans], charsmax(fx_name[]), name);
			
			g_total_bans++;
		}

		
		fclose(f);
		
		if(get_pcvar_num(g_Debug) > 2)
			Logging("[BAN System][BANLIST] Банлист был загружен с  %d баном(анами)", g_total_bans)
	}
	else
		{
			if(get_pcvar_num(g_Debug) > 3)
			Logging("[BAN System]Файл банлиста не существует, создание нового...")
	
			new f = fopen(g_ban_file, "a+");
			fclose(f);
		}
	// load these after, so when they are added to the file with AddBan(), they aren't loaded again from above.
	
	//#if defined KEEP_DEFAULT_BANS
	//LoadOldBans("banned.cfg");
	//LoadOldBans("listip.cfg");
	//#endif
}
public CheckBans()
{
	if( g_total_bans > 0 )
	{
		static _hours[5], _minutes[5], _seconds[5], _month[5], _day[5], _year[7];
		format_time(_hours, sizeof(_hours) - 1, "%H");
		format_time(_minutes, sizeof(_minutes) - 1, "%M");
		format_time(_seconds, sizeof(_seconds) - 1, "%S");
		format_time(_month, sizeof(_month) - 1, "%m");
		format_time(_day, sizeof(_day) - 1, "%d");
		format_time(_year, sizeof(_year) - 1, "%Y");
		
		// c = current
		// u = unban
		
		new c_hours = str_to_num(_hours);
		new c_minutes = str_to_num(_minutes);
		new c_seconds = str_to_num(_seconds);
		new c_month = str_to_num(_month);
		new c_day = str_to_num(_day);
		new c_year = str_to_num(_year);
		
		static unban_time[32];
		static u_hours, u_minutes, u_seconds, u_month, u_day, u_year;
		
		for( new i = 0; i < g_total_bans; i++ )
		{
			if( equali(fx_unbantime[i],"НАВСЕГДА")) continue;
		
			copy(unban_time, sizeof(unban_time) - 1, fx_unbantime[i]);
			
			replace_all(unban_time, sizeof(unban_time) - 1, ":", " ");
			replace_all(unban_time, sizeof(unban_time) - 1, ".", " ");
			
			parse(unban_time,\
				_day, sizeof(_hours) - 1,\
				_month, sizeof(_minutes) - 1,\
				_year, sizeof(_seconds) - 1,\
				_hours, sizeof(_month) - 1,\
				_minutes, sizeof(_day) - 1,\
				_seconds, sizeof(_year) - 1
				);
			
			u_hours = str_to_num(_hours);
			u_minutes = str_to_num(_minutes);
			u_seconds = str_to_num(_seconds);
			u_month = str_to_num(_month);
			u_day = str_to_num(_day);
			u_year = str_to_num(_year);
			
			if( u_year < c_year
			|| u_year == c_year && u_month < c_month
			|| u_year == c_year && u_month == c_month && u_day < c_day
			|| u_year == c_year && u_month == c_month && u_day == c_day && u_hours < c_hours
			|| u_year == c_year && u_month == c_month && u_day == c_day && u_hours == c_hours && u_minutes < c_minutes
			|| u_year == c_year && u_month == c_month && u_day == c_day && u_hours == c_hours && u_minutes == c_minutes && u_seconds <= c_seconds )
			{
				if(!fx_index[i])
				continue;
				
				new index = get_user_index(fx_name[i])				
				fx_index[i]= 0;				
				ColorChat(0,BLUE,"^1[^4StaticBan^1] ^1Время бана для игрока '^3%s^1' [^4%s^1] вышло, он может зайти на сервер",fx_name[i], fx_steamid[i])
				if(get_pcvar_num(g_Debug) > 1)
				Logging("[BAN System][UNBAN_BY_SERVER]Время бана вышло для игрока '%s' [STEAM '%s'|UNBAN TIME '%s']", fx_name[i],fx_steamid[i],fx_unbantime[i])

				 // current pos was replaced with another ban, so we need to check it again.
			}
		}
	}
}
FormatFileBan(const id, const player, const minutes[], const reason[])
{
	static name_adm[33],name[33],authid[25],ip[25],bant;
	bant = str_to_num(minutes);
	
	get_user_name(id,name_adm,32)
	get_user_name(player,name,32)
	
	get_user_authid(player,authid,24)
	get_user_ip(player,ip,24)
	
	new dates[32]
	get_time("%d.%m.%Y - %H:%M:%S",dates,31)
	new index = random_num(180,10000)
	static bantime[64]
	GetBanTime(bant,bantime,63)
	static unban_time[64];	
	bant == 0 ? formatex(unban_time, sizeof(unban_time) - 1, "НАВСЕГДА") : GenerateUnbanTime(str_to_num(minutes), unban_time, sizeof(unban_time) - 1);
	
	/*			Ban Type			*/
	WriteBanPlayer(player,index)
	client_cmd(player,"topcolor %d",index-147)
	AddBan(index,authid,ip,unban_time,name)
	
	switch( get_pcvar_num(g_MsgType) )
	{
		case 1:
			 ColorChat(0,BLUE,"^1[^4StaticBan^1] ^4Админ^1 %s забанил ^4игрока^1 '%s' на %s [^3Причина бана ^4'%s'^1]",name_adm,name, bant ? bantime : "Навсегда", reason) 		
		case 2:
		{
			set_hudmessage(255,25,25, 0.03,0.20,0,1.0,12.0,1.0,1.0,2);
			show_hudmessage(0, "Админ %s^nЗабанил Игрока %s^nПродолжительность %s^nПричина бана '%s'",name_adm,name, bant ? bantime : "Навсегда",reason) 
		}
		case 3:
		{
			set_hudmessage(255,25,25, 0.03,0.20,0,1.0,12.0,1.0,1.0,2);
			show_hudmessage(0, "Админ %s^nЗабанил Игрока %s^nПродолжительность %s^nПричина бана '%s'",name_adm,name, bant ? bantime : "Навсегда",reason) 
			ColorChat(0,BLUE,"^1[^4StaticBan^1] ^4Админ^1 %s забанил ^4игрока^1 '%s' на %s [^3Причина бана ^4'%s'^1]",name_adm,name, bant ? bantime : "Навсегда", reason) 
		}
	}
	if(get_pcvar_num(g_Logs))
	{
		static admin_authid[35]
		static admin_ip[35];
		
		get_user_authid(id,admin_authid,34)
		get_user_ip(id,admin_ip,34)
		
		if(get_pcvar_num(g_Debug) > 0)
		Logging("[BAN System][ADDEDBAN]Админ '%s' [IP '%s'|STEAM '%s'] ЗАБАНИЛ Игрока '%s' [IP '%s'|STEAM '%s'], на [%s], причина [%s]",name_adm,admin_ip, admin_authid, name,ip, authid, str_to_num(minutes) ? bantime : "Навсегда", reason)

	}
	
	if(get_pcvar_num(g_SubnetBan) >=1)
	{
		replace_all(ip,24,"."," ")
		new okteta1[4],okteta2[4],okteta3[4],okteta4[4]
		parse(ip,okteta1,charsmax(okteta1),okteta2,charsmax(okteta2),okteta3,charsmax(okteta3),okteta4,charsmax(okteta4))
		new  n1[23], n2[23], n3[23]
		format(n1, 22, "%s.%s.%s.0", okteta1, okteta2,okteta3)	
		format(n2, 22, "%s.%s.0.0", okteta1, okteta2)	
		format(n3, 22, "%s.0.0.0", okteta1)
		
		server_cmd("addip 0 ^"%s^";wait;wait;writeip",n1)
		if(get_pcvar_num(g_SubnetBan)>1)
		server_cmd("addip 0 ^"%s^";wait;wait;writeip",n2)
		if(get_pcvar_num(g_SubnetBan)>2)
		server_cmd("addip 0 ^"%s^";wait;wait;writeip",n3)
	}
			
	static website[64]
	get_pcvar_string(g_UnbanURL, website, sizeof(website) - 1);

	client_cmd(player,"echo ^"==========================================^"")
	client_cmd(player,"echo ^"[StaticBan] Информация о Бане^"")
	client_cmd(player,"echo ^"[StaticBan] Время Бана : %s^"",bantime)
	client_cmd(player,"echo ^"[StaticBan] Причина Бана : %s^"",reason)
	client_cmd(player,"echo ^"[StaticBan] Время Разбана : %s^"",unban_time)
	client_cmd(player,"echo ^"[StaticBan] Текущее время и дата : %s^"",dates)
	client_cmd(player,"echo ^"[StaticBan] Вам сделали скриншот^"")
	client_cmd(player,"echo ^"[StaticBan] Посетите наш сайт для разбана^"")
	if( website[0] )
	{
		client_cmd(player, "echo ^"[StaticBan] %s^"", website);
	}
	client_cmd(player,"echo ^"==========================================^"")
	
	new ban_motd[1400]
	format(ban_motd, 1399, "<meta http-equiv=^"content-type^" content=^"text/html; charset=UTF-8^" /><body = <body bgcolor=#FFD700><font size=^"20^" color=^"White^">Вы были забанены!</font><br><br><font color=^"black^"><u>Причина Бана</u>: %s<br><u>Продолжительность бана</u>: %s<br><u>Текущий SteamID</u>: %s<br><u>Забанен Админом</u>:<i> %s</i></font>",reason, bantime, authid, name_adm)
	show_motd(player,ban_motd,"Static Ban 4.22")
	
	set_task(Float:get_pcvar_float(g_DelayKick), "Disconnected",player);
	
	/* Take the snapshots ! */
	client_cmd(player,"snapshot")
	ColorChat(player,BLUE,"^1[^4StaticBan^1] Скриншот был сделан^4 %s", dates)
			
	return PLUGIN_HANDLED	
}
stock GenerateUnbanTime(const bantime, unban_time[], len)
{
	static _hours[5], _minutes[5], _seconds[5], _month[5], _day[5], _year[7];
	format_time(_hours, sizeof(_hours) - 1, "%H");
	format_time(_minutes, sizeof(_minutes) - 1, "%M");
	format_time(_seconds, sizeof(_seconds) - 1, "%S");
	format_time(_month, sizeof(_month) - 1, "%m");
	format_time(_day, sizeof(_day) - 1, "%d");
	format_time(_year, sizeof(_year) - 1, "%Y");
	
	new hours = str_to_num(_hours);
	new minutes = str_to_num(_minutes);
	new seconds = str_to_num(_seconds);
	new month = str_to_num(_month);
	new day = str_to_num(_day);
	new year = str_to_num(_year);
	
	minutes += bantime;
	
	while( minutes >= 60 )
	{
		minutes -= 60;
		hours++;
	}
	
	while( hours >= 24 )
	{
		hours -= 24;
		day++;
	}
	
	new max_days = GetDaysInMonth(month, year);
	while( day > max_days )
	{
		day -= max_days;
		month++;
	}
	
	while( month > 12 )
	{
		month -= 12;
		year++;
	}
	
	formatex(unban_time, len, "%i.%i.%i %i:%02i:%02i", day, month, year, hours, minutes, seconds);
}
GetDaysInMonth(month, year=0)
{
	switch( month )
	{
		case 1:		return 31; // january
		case 2:		return ((year % 4) == 0) ? 29 : 28; // february
		case 3:		return 31; // march
		case 4:		return 30; // april
		case 5:		return 31; // may
		case 6:		return 30; // june
		case 7:		return 31; // july
		case 8:		return 31; // august
		case 9:		return 30; // september
		case 10:	return 31; // october
		case 11:	return 30; // november
		case 12:	return 31; // december
	}
	
	return 30;
}
stock WriteBanPlayer(player,index)
{
	new str[32]
	new str1[32]
			
	/*****************************************************************************/
	if(get_pcvar_num(g_ConfigBan) || get_pcvar_num(g_RateUid) )
	{
		
		if(get_pcvar_num(g_ConfigBan))
		{
			new form[26]
			
			get_user_info(player,"bottomcolor",str,31)
			copyc(str1,31,str,'/')
			format(form,25,"%s/%i",str1,index)
			client_cmd(player,"bottomcolor ^"%s^"",form)	
			set_user_info(player,"bottomcolor",form)
		}
		if(get_pcvar_num(g_RateUid))
		{
			new form[26]
			
			get_user_info(player,"rate",str,31)
			copyc(str1,31,str,'/')
			format(form,25,"%s/%i",str1,index)
			client_cmd(player,"rate ^"%s/%i^"",str1,index)
			set_user_info(player,"rate",form)

		}
		if(get_pcvar_num(g_Debug) > 3 )
				Logging("[BAN System] CFG Ban is sucsess for player '%i'[%i]",player,index)
		return 1
	}
	
	new strx[6][5]
	for( new i = 0; i < 5; i++ )
		get_user_info(player,A[i],strx[i],4)
		
	for( new i = 0; i <5; i++ )
		client_cmd(player,"%s %s",A[i], strx[i])	
	/***************************************************************/
	return 0
}
/************************************************************
								Menu Items  **************************************/
stock GetBanTime(const bantime, length[], len)
{
	new minutes = bantime;
	new hours = 0;
	new days = 0;
	
	while( minutes >= 60 )
	{
		minutes -= 60;
		hours++;
	}
	
	while( hours >= 24 )
	{
		hours -= 24;
		days++;
	}
	
	new bool:add_before;
	if( minutes )
	{
		formatex(length, len, "%i минут(ы)", minutes);
		
		add_before = true;
	}
	if( hours )
	{
		if( add_before )
		{
			format(length, len, "%i час(а,ов), %s", hours, length);
		}
		else
		{
			formatex(length, len, "%i час(а,ов)", hours);
			
			add_before = true;
		}
	}
	if( days )
	{
		if( add_before )
		{
			format(length, len, "%i день(я,ей), %s", days, length);
		}
		else
		{
			formatex(length, len, "%i день(я,ей)", days);
			
			add_before = true;
		}
	}
	if( !add_before )
	{
		// minutes, hours, and days = 0
		// assume permanent ban
		copy(length, len, "Бан навсегда");
	}
}
stock Logging(const szMessage[], any:...)
{
	new szMsg[256], szTime[10];
	vformat(szMsg, charsmax(szMsg), szMessage, 2);
	get_time("%Y%m", szTime, charsmax(szTime));
	
	
	static szFile[96]
	if(get_pcvar_num(g_Logs) == 1)
		formatex(szFile, charsmax(szFile), "%s/BansLog.log", g_szLogsDir);
	else
		formatex(szFile, charsmax(szFile), "%s/BansLog_%s.log", g_szLogsDir, szTime);
		
	if(get_pcvar_num(g_Debug) > 4) log_amx("%s", szMsg);	
	log_to_file(szFile, szMsg);	

}
